{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/blakemilam/Projects/whiskersNPaws/app/register/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Box, Typography, TextField, Button, Alert } from '@mui/material';\nimport { useRouter } from 'next/navigation'; // ✅ Correct for App Router\n\n\nexport default function RegisterPage() {\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    password: '',\n    confirmPassword: '',\n    addressLine1: '',\n    addressLine2: '',\n    city: '',\n    state: '',\n    zip: '',\n  });\n\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n  const router = useRouter();\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    // Basic validation\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match.');\n      return;\n    }\n\n    if (\n      !formData.firstName ||\n      !formData.lastName ||\n      !formData.email ||\n      !formData.password ||\n      !formData.addressLine1 ||\n      !formData.city ||\n      !formData.state ||\n      !formData.zip\n    ) {\n      setError('All required fields must be filled.');\n      return;\n    }\n\n    setError('');\n\n    try {\n      const response = await fetch('/api/register', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(formData),\n      });\n\n      if (response.ok) {\n        const { token } = await response.json();\n        localStorage.setItem('jwt', token);\n        window.dispatchEvent(new Event('authChanged')); // ✅ updates header\n        setTimeout(() => router.push('/dashboard'), 100); // ✅ routes to dashboard\n      }\n      else {\n        const errorData = await response.json();\n        setError(errorData.message || 'Failed to register.');\n        return;\n      }\n\n      setSuccess(true);\n      setFormData({\n        firstName: '',\n        lastName: '',\n        email: '',\n        phone: '',\n        password: '',\n        confirmPassword: '',\n        addressLine1: '',\n        addressLine2: '',\n        city: '',\n        state: '',\n        zip: '',\n      });\n    } catch (err) {\n      console.error(err);\n      setError('An error occurred. Please try again.');\n    }\n  };\n\n  return (\n    <Box sx={{ p: 4, maxWidth: 600, mx: 'auto' }}>\n      <Typography variant=\"h4\" gutterBottom align=\"center\">\n        Register\n      </Typography>\n      {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\n      {success && <Alert severity=\"success\" sx={{ mb: 2 }}>Registration successful!</Alert>}\n      <Box component=\"form\" onSubmit={handleSubmit} sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n        <TextField\n          label=\"First Name\"\n          name=\"firstName\"\n          value={formData.firstName}\n          onChange={handleChange}\n          fullWidth\n          required\n        />\n        <TextField\n          label=\"Last Name\"\n          name=\"lastName\"\n          value={formData.lastName}\n          onChange={handleChange}\n          fullWidth\n          required\n        />\n        <TextField\n          label=\"Email\"\n          name=\"email\"\n          type=\"email\"\n          value={formData.email}\n          onChange={handleChange}\n          fullWidth\n          required\n        />\n        <TextField\n          label=\"Phone\"\n          name=\"phone\"\n          type=\"tel\"\n          value={formData.phone}\n          onChange={handleChange}\n          fullWidth\n        />\n        <TextField\n          label=\"Password\"\n          name=\"password\"\n          type=\"password\"\n          value={formData.password}\n          onChange={handleChange}\n          fullWidth\n          required\n        />\n        <TextField\n          label=\"Confirm Password\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          value={formData.confirmPassword}\n          onChange={handleChange}\n          fullWidth\n          required\n        />\n        <TextField\n          label=\"Address Line 1\"\n          name=\"addressLine1\"\n          value={formData.addressLine1}\n          onChange={handleChange}\n          fullWidth\n          required\n        />\n        <TextField\n          label=\"Address Line 2\"\n          name=\"addressLine2\"\n          value={formData.addressLine2}\n          onChange={handleChange}\n          fullWidth\n        />\n        <TextField\n          label=\"City\"\n          name=\"city\"\n          value={formData.city}\n          onChange={handleChange}\n          fullWidth\n          required\n        />\n        <TextField\n          label=\"State\"\n          name=\"state\"\n          value={formData.state}\n          onChange={handleChange}\n          fullWidth\n          required\n        />\n        <TextField\n          label=\"Zip Code\"\n          name=\"zip\"\n          value={formData.zip}\n          onChange={handleChange}\n          fullWidth\n          required\n        />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Register\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}