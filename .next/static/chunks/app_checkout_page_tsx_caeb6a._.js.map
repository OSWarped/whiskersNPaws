{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/blakemilam/Projects/whiskersNPaws/app/checkout/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  List,\n  ListItem,\n  Button,\n  Alert,\n  Paper,\n  Grid,\n} from '@mui/material';\nimport moment from 'moment';\n\ninterface Pet {\n  id: number;\n  name: string;\n  type: string;\n  breed?: string;\n  specialNeeds?: string;\n}\n\ninterface Booking {\n  date: string;\n  service: string;\n  addOns: string[];\n  pets: Pet[];\n  totalCost: number;\n  details: {\n    id: number;\n    reservationId: number;\n    addOnId: string | null;\n    price: number;\n    quantity: number;\n  }[];\n}\n\nexport default function CheckoutPage() {\n  const [bookings, setBookings] = useState<Booking[]>([]);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // Fetch bookings from localStorage\n    const storedBookings = JSON.parse(localStorage.getItem('bookings') || '[]');\n    setBookings(storedBookings);\n  }, []);\n\n  const handleMockPayment = async () => {\n    setLoading(true);\n    setSuccessMessage('');\n    setErrorMessage('');\n\n    try {\n      const token = localStorage.getItem('jwt');\n      if (!token) {\n        setErrorMessage('User is not logged in.');\n        setLoading(false);\n        return;\n      }\n\n      const payload = { bookings };\n\n      const response = await fetch('/api/reservations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(payload),\n      });\n\n      if (response.ok) {\n        setSuccessMessage('Reservations successfully created!');\n        localStorage.removeItem('bookings');\n        setBookings([]);\n      } else {\n        const errorData = await response.json();\n        setErrorMessage(errorData.message || 'Failed to create reservations.');\n      }\n    } catch (error) {\n      console.error('Error creating reservations:', error);\n      setErrorMessage('An unexpected error occurred. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Box sx={{ p: 4, maxWidth: 800, mx: 'auto' }}>\n      <Typography variant=\"h4\" gutterBottom align=\"center\">\n        Checkout\n      </Typography>\n      {successMessage && (\n        <Alert severity=\"success\" sx={{ mb: 2 }}>\n          {successMessage}\n        </Alert>\n      )}\n      {errorMessage && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {errorMessage}\n        </Alert>\n      )}\n      {bookings.length === 0 ? (\n        <Typography variant=\"body1\" align=\"center\">\n          No bookings to display.\n        </Typography>\n      ) : (\n        bookings.map((booking, index) => (\n          <Paper\n            key={index}\n            elevation={3}\n            sx={{\n              p: 3,\n              mb: 3,\n              borderRadius: 2,\n              backgroundColor: '#f9f9f9',\n            }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Date\n                </Typography>\n                <Typography variant=\"body1\">\n                  {moment(booking.date).format('MMMM Do, YYYY')}\n                </Typography>\n              </Grid>\n               \n              <Grid item xs={12}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Pets\n                </Typography>\n                <List disablePadding sx={{ pl: 2 }}>\n                  {booking.pets.length > 0 ? (\n                    booking.pets.map((pet) => (\n                      <ListItem\n                        key={pet.id}\n                        sx={{\n                          display: 'block',\n                          pl: 0,\n                          pb: 2,\n                        }}\n                      >\n                        <Typography variant=\"body2\">\n                          <strong>Name:</strong> {pet.name}\n                        </Typography>\n                        <Typography variant=\"body2\">\n                          <strong>Type:</strong> {pet.type}\n                          {pet.breed ? ` - ${pet.breed}` : ''}\n                        </Typography>\n                        {pet.specialNeeds && (\n                          <Typography variant=\"body2\">\n                            <strong>Special Needs:</strong> {pet.specialNeeds}\n                          </Typography>\n                        )}\n                      </ListItem>\n                    ))\n                  ) : (\n                    <ListItem sx={{ display: 'block', pl: 0 }}>\n                      <Typography variant=\"body2\">No pets selected</Typography>\n                    </ListItem>\n                  )}\n                </List>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Add-Ons\n                </Typography>\n                <Typography variant=\"body1\">\n                  {booking.addOns.length > 0 ? booking.addOns.join(', ') : 'No Add-Ons'}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Total Cost\n                </Typography>\n                <Typography variant=\"body1\">\n                  ${booking.totalCost.toFixed(2)}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Paper>\n        ))\n      )}\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        sx={{ mt: 4, py: 2 }}\n        onClick={handleMockPayment}\n        disabled={loading || bookings.length === 0}\n      >\n        {loading ? 'Processing...' : 'Confirm and Pay'}\n      </Button>\n    </Box>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}